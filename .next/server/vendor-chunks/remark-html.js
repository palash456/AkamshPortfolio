"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/remark-html";
exports.ids = ["vendor-chunks/remark-html"];
exports.modules = {

/***/ "(rsc)/./node_modules/remark-html/index.js":
/*!*******************************************!*\
  !*** ./node_modules/remark-html/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ remarkHtml)\n/* harmony export */ });\n/* harmony import */ var hast_util_to_html__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! hast-util-to-html */ \"(rsc)/./node_modules/hast-util-to-html/lib/index.js\");\n/* harmony import */ var hast_util_sanitize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! hast-util-sanitize */ \"(rsc)/./node_modules/hast-util-sanitize/lib/index.js\");\n/* harmony import */ var mdast_util_to_hast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mdast-util-to-hast */ \"(rsc)/./node_modules/mdast-util-to-hast/lib/index.js\");\n/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('hast-util-sanitize').Schema} Schema\n *\n * @typedef ExtraOptionsFields\n *   Configuration (optional).\n * @property {boolean|Schema|null} [sanitize]\n *   How to sanitize the output.\n * @property {import('mdast-util-to-hast').Handlers} [handlers={}]\n *   Object mapping mdast nodes to functions handling them.\n *\n * @typedef {import('hast-util-to-html').Options & ExtraOptionsFields} Options\n */\n\n\n\n\n\n/**\n * Plugin to serialize markdown as HTML.\n *\n * @this {import('unified').Processor}\n * @type {import('unified').Plugin<[Options?] | [], Root, string>}\n */\nfunction remarkHtml(settings = {}) {\n  const options = {...settings}\n  /** @type {boolean|undefined} */\n  let clean\n\n  if (typeof options.sanitize === 'boolean') {\n    clean = options.sanitize\n    options.sanitize = undefined\n  }\n\n  if (typeof clean !== 'boolean') {\n    clean = true\n  }\n\n  Object.assign(this, {Compiler: compiler})\n\n  /**\n   * @type {import('unified').CompilerFunction<Root, string>}\n   */\n  function compiler(node, file) {\n    const hast = (0,mdast_util_to_hast__WEBPACK_IMPORTED_MODULE_0__.toHast)(node, {\n      allowDangerousHtml: !clean,\n      handlers: options.handlers\n    })\n    // @ts-expect-error: assume root.\n    const cleanHast = clean ? (0,hast_util_sanitize__WEBPACK_IMPORTED_MODULE_1__.sanitize)(hast, options.sanitize) : hast\n    const result = (0,hast_util_to_html__WEBPACK_IMPORTED_MODULE_2__.toHtml)(\n      // @ts-expect-error: assume root.\n      cleanHast,\n      Object.assign({}, options, {allowDangerousHtml: !clean})\n    )\n\n    if (file.extname) {\n      file.extname = '.html'\n    }\n\n    // Add an eof eol.\n    return node &&\n      node.type &&\n      node.type === 'root' &&\n      result &&\n      /[^\\r\\n]/.test(result.charAt(result.length - 1))\n      ? result + '\\n'\n      : result\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcmVtYXJrLWh0bWwvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkMsYUFBYSxxQ0FBcUM7QUFDbEQ7QUFDQTtBQUNBO0FBQ0EsY0FBYyxxQkFBcUI7QUFDbkM7QUFDQSxjQUFjLHVDQUF1QyxZQUFZO0FBQ2pFO0FBQ0E7QUFDQSxhQUFhLDBEQUEwRDtBQUN2RTs7QUFFd0M7QUFDRztBQUNGOztBQUV6QztBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1YsVUFBVTtBQUNWO0FBQ2UsaUNBQWlDO0FBQ2hELG1CQUFtQjtBQUNuQixhQUFhLG1CQUFtQjtBQUNoQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsdUJBQXVCLG1CQUFtQjs7QUFFMUM7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLGlCQUFpQiwwREFBTTtBQUN2QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsOEJBQThCLDREQUFRO0FBQ3RDLG1CQUFtQix5REFBTTtBQUN6QjtBQUNBO0FBQ0Esc0JBQXNCLFlBQVksMkJBQTJCO0FBQzdEOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2FydGVyLW5leHRqcy8uL25vZGVfbW9kdWxlcy9yZW1hcmstaHRtbC9pbmRleC5qcz9kZTFjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5Sb290fSBSb290XG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0LXV0aWwtc2FuaXRpemUnKS5TY2hlbWF9IFNjaGVtYVxuICpcbiAqIEB0eXBlZGVmIEV4dHJhT3B0aW9uc0ZpZWxkc1xuICogICBDb25maWd1cmF0aW9uIChvcHRpb25hbCkuXG4gKiBAcHJvcGVydHkge2Jvb2xlYW58U2NoZW1hfG51bGx9IFtzYW5pdGl6ZV1cbiAqICAgSG93IHRvIHNhbml0aXplIHRoZSBvdXRwdXQuXG4gKiBAcHJvcGVydHkge2ltcG9ydCgnbWRhc3QtdXRpbC10by1oYXN0JykuSGFuZGxlcnN9IFtoYW5kbGVycz17fV1cbiAqICAgT2JqZWN0IG1hcHBpbmcgbWRhc3Qgbm9kZXMgdG8gZnVuY3Rpb25zIGhhbmRsaW5nIHRoZW0uXG4gKlxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdC11dGlsLXRvLWh0bWwnKS5PcHRpb25zICYgRXh0cmFPcHRpb25zRmllbGRzfSBPcHRpb25zXG4gKi9cblxuaW1wb3J0IHt0b0h0bWx9IGZyb20gJ2hhc3QtdXRpbC10by1odG1sJ1xuaW1wb3J0IHtzYW5pdGl6ZX0gZnJvbSAnaGFzdC11dGlsLXNhbml0aXplJ1xuaW1wb3J0IHt0b0hhc3R9IGZyb20gJ21kYXN0LXV0aWwtdG8taGFzdCdcblxuLyoqXG4gKiBQbHVnaW4gdG8gc2VyaWFsaXplIG1hcmtkb3duIGFzIEhUTUwuXG4gKlxuICogQHRoaXMge2ltcG9ydCgndW5pZmllZCcpLlByb2Nlc3Nvcn1cbiAqIEB0eXBlIHtpbXBvcnQoJ3VuaWZpZWQnKS5QbHVnaW48W09wdGlvbnM/XSB8IFtdLCBSb290LCBzdHJpbmc+fVxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZW1hcmtIdG1sKHNldHRpbmdzID0ge30pIHtcbiAgY29uc3Qgb3B0aW9ucyA9IHsuLi5zZXR0aW5nc31cbiAgLyoqIEB0eXBlIHtib29sZWFufHVuZGVmaW5lZH0gKi9cbiAgbGV0IGNsZWFuXG5cbiAgaWYgKHR5cGVvZiBvcHRpb25zLnNhbml0aXplID09PSAnYm9vbGVhbicpIHtcbiAgICBjbGVhbiA9IG9wdGlvbnMuc2FuaXRpemVcbiAgICBvcHRpb25zLnNhbml0aXplID0gdW5kZWZpbmVkXG4gIH1cblxuICBpZiAodHlwZW9mIGNsZWFuICE9PSAnYm9vbGVhbicpIHtcbiAgICBjbGVhbiA9IHRydWVcbiAgfVxuXG4gIE9iamVjdC5hc3NpZ24odGhpcywge0NvbXBpbGVyOiBjb21waWxlcn0pXG5cbiAgLyoqXG4gICAqIEB0eXBlIHtpbXBvcnQoJ3VuaWZpZWQnKS5Db21waWxlckZ1bmN0aW9uPFJvb3QsIHN0cmluZz59XG4gICAqL1xuICBmdW5jdGlvbiBjb21waWxlcihub2RlLCBmaWxlKSB7XG4gICAgY29uc3QgaGFzdCA9IHRvSGFzdChub2RlLCB7XG4gICAgICBhbGxvd0Rhbmdlcm91c0h0bWw6ICFjbGVhbixcbiAgICAgIGhhbmRsZXJzOiBvcHRpb25zLmhhbmRsZXJzXG4gICAgfSlcbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yOiBhc3N1bWUgcm9vdC5cbiAgICBjb25zdCBjbGVhbkhhc3QgPSBjbGVhbiA/IHNhbml0aXplKGhhc3QsIG9wdGlvbnMuc2FuaXRpemUpIDogaGFzdFxuICAgIGNvbnN0IHJlc3VsdCA9IHRvSHRtbChcbiAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3I6IGFzc3VtZSByb290LlxuICAgICAgY2xlYW5IYXN0LFxuICAgICAgT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucywge2FsbG93RGFuZ2Vyb3VzSHRtbDogIWNsZWFufSlcbiAgICApXG5cbiAgICBpZiAoZmlsZS5leHRuYW1lKSB7XG4gICAgICBmaWxlLmV4dG5hbWUgPSAnLmh0bWwnXG4gICAgfVxuXG4gICAgLy8gQWRkIGFuIGVvZiBlb2wuXG4gICAgcmV0dXJuIG5vZGUgJiZcbiAgICAgIG5vZGUudHlwZSAmJlxuICAgICAgbm9kZS50eXBlID09PSAncm9vdCcgJiZcbiAgICAgIHJlc3VsdCAmJlxuICAgICAgL1teXFxyXFxuXS8udGVzdChyZXN1bHQuY2hhckF0KHJlc3VsdC5sZW5ndGggLSAxKSlcbiAgICAgID8gcmVzdWx0ICsgJ1xcbidcbiAgICAgIDogcmVzdWx0XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/remark-html/index.js\n");

/***/ })

};
;